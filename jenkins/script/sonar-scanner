#!/usr/bin/env sh
# @author luchaoxin
# @version V 1.0
# @Description: 
# @date 2020-11-24

#
# SonarScanner Startup Script for Unix
#
# Required ENV vars:
#   JAVA_HOME - Location of Java's installation, optional if use_embedded_jre is set
#
# Optional ENV vars:
#   SONAR_SCANNER_OPTS - Parameters passed to the Java VM when running the SonarScanner
#   SONAR_SCANNER_DEBUG_OPTS - Extra parameters passed to the Java VM for debugging

real_path () {
  target=$1

  (
  while true; do
    cd "`dirname "$target"`"
    target=`basename "$target"`
    test -L "$target" || break
    target=`readlink "$target"`
  done

  echo "`pwd -P`/$target"
  )
}

# /var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-qube-tool/bin/sonar-scanner
script_path=`real_path "$0"`

#/var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-qube-tool/bin/sonar-scanner
sonar_scanner_home=`dirname "$script_path"`/..

# make it fully qualified
#/var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-qube-tool/bin/..
sonar_scanner_home=`cd "$sonar_scanner_home" && pwd -P`

#/var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-qube-tool
jar_file=$sonar_scanner_home/lib/sonar-scanner-cli-4.5.0.2216.jar

# check that sonar_scanner_home has been correctly set
if [ ! -f "$jar_file" ] ; then
  echo "File does not exist: $jar_file"
  echo "'$sonar_scanner_home' does not point to a valid installation directory: $sonar_scanner_home"
  exit 1
fi
# /var/jenkins_home/tools/hudson.plugins.sonar.SonarRunnerInstallation/sonar-qube-tool/lib/sonar-scanner-cli-4.5.0.2216.jar

use_embedded_jre=false
if [ "$use_embedded_jre" = true ]; then
  export JAVA_HOME="$sonar_scanner_home/jre"
fi

if [ -n "$JAVA_HOME" ]
then
  java_cmd="$JAVA_HOME/bin/java"
else
  java_cmd="`which java`"
fi

if [ -z "$java_cmd" -o ! -x "$java_cmd" ] ; then
  echo "Could not find 'java' executable in JAVA_HOME or PATH."
  exit 1
fi

if [ -z "${SONAR_SCANNER_OPTS}" ]; then
  SONAR_SCANNER_OPTS='-Dsonar.sources=src/main/java -Dsonar.language=java -Dsonar.java.binaries=target/classes'
fi

project_home=`pwd`

echo "Info: Using sonar-scanner at $sonar_scanner_home"
echo "Info: Using java at $java_cmd"
echo "Info: Using classpath $jar_file"
echo "Info: Using project $project_home"
echo "Info: Using SONAR_SCANNER_OPTS $SONAR_SCANNER_OPTS"
echo "Info: Using SONAR_SCANNER_DEBUG_OPTS  $SONAR_SCANNER_DEBUG_OPTS"

exec "$java_cmd" \
  -Djava.awt.headless=true \
  $SONAR_SCANNER_OPTS \
  $SONAR_SCANNER_DEBUG_OPTS \
  -classpath  "$jar_file" \
  -Dscanner.home="$sonar_scanner_home" \
  -Dproject.home="$project_home" \
  org.sonarsource.scanner.cli.Main "$@"